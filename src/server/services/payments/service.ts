import { procedure, router } from '@/server/trpc';
import { getBaseUrl } from '@/utils/trpc';
import { z } from 'zod';

export function createPaymentsService() {
  return router({
    retrieve: procedure
      .input(
        z.object({
          sessionId: z.string(),
        })
      )
      .query(async ({ ctx, input }) => {
        console.log('RETRIEVE');
        const { stripe } = ctx;
        const session = await stripe.checkout.sessions.retrieve(input.sessionId);

        const id = input.sessionId;
        const email = session.customer_details?.email!;

        const { data, error } = await ctx.supabase
          .from('customers')
          .upsert([{ id, email }])
          .select('*')
          .single();

        if (error) {
          throw new Error(error.message);
        }

        return { isDiffusionDone: data.dispatched };
      }),
    purchase: procedure.mutation(async ({ ctx }) => {
      const { stripe } = ctx;
      const BASE_URL = getBaseUrl();
      const session = await stripe.checkout.sessions.create({
        // customer_creation: 'always',
        payment_method_types: ['card'],
        line_items: [
          {
            price_data: {
              currency: 'eur',
              product_data: {
                name: 'Anime Style AI Avatars',
                description:
                  '15 anime style avatar images generated by Artificial Intelligence. You will get 3 images for each style: ðŸ’•Kawaii ðŸ¤–Mecha ðŸ’¥Shonen ðŸŒ€Naruto. One time payment. No subscription. After payment you can upload your photos.',
                images: [
                  'https://ogoexfvkwxcwmjqveeet.supabase.co/storage/v1/object/sign/images/ezgif.com-crop.gif?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJpbWFnZXMvZXpnaWYuY29tLWNyb3AuZ2lmIiwiaWF0IjoxNjc3NTE5MzM0LCJleHAiOjE2ODAxMTEzMzR9.5uAcy4VXjwDz8KE7NmuddmW4Tc5k4Wo5-oUCwQJPq9E&t=2023-02-27T17%3A35%3A34.739Z',
                ],
              },
              unit_amount: 2000,
            },
            quantity: 1,
          },
        ],
        mode: 'payment',
        success_url: `${BASE_URL}/payment/{CHECKOUT_SESSION_ID}`,
        cancel_url: `${BASE_URL}/cancel`,
      });

      console.log({ session });

      return session;
    }),
  });
}
