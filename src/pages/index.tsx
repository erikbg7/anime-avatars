import { useRef } from 'react';
import Head from 'next/head';
import { GetStaticProps, InferGetStaticPropsType } from 'next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import { useTranslation } from 'next-i18next';

import { trpc } from '@/utils/trpc';
import styles from '@/styles/Home.module.css';
import Logo from '@/components/Logo';
import Demo from '@/components/Demo';
import Steps from '@/components/Steps';
import Title from '@/components/landing/Title';
import Socials from '@/components/landing/Socials';

type Props = InferGetStaticPropsType<typeof getStaticProps>;

export default function Home(_props: Props) {
  const { t } = useTranslation('home');
  const demoRef = useRef<HTMLDivElement>(null);
  const stepsRef = useRef<HTMLDivElement>(null);
  const purchase = trpc.payments.purchase.useMutation();

  const handlePurchase = async () => {
    import(/* webpackPrefetch: true */ '@/utils/stripe' /* webpackChunkName: "stripeChunk" */)
      .then(({ getStripe }) => getStripe())
      .then(async (stripe) => {
        const { id } = await purchase.mutateAsync();
        stripe?.redirectToCheckout({ sessionId: id });
      });
  };

  const scrollToDemo = () =>
    demoRef.current && demoRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });

  const scrollToSteps = () =>
    stepsRef.current && stepsRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Logo />
        <div className="hero relative z-40 min-h-screen">
          <video className="absolute -z-10 h-full w-full object-cover" autoPlay muted loop>
            <source src="night-bg.webm" type="video/webm" />
          </video>
          <div className="hero-overlay bg-opacity-60 bg-gradient-to-br from-black/5 via-black/10 to-black/30"></div>
          <div className="hero-content flex h-full flex-col justify-center pb-32 pt-12 text-center text-white">
            <Title line1={t('title.line-1')} line2={t('title.line-2')} line3={t('title.line-3')} />
            <div>
              <p className="my-2 text-lg">üîí {t('features.payment')}</p>
              <p className="my-2 text-lg">‚ú® {t('features.quality')}</p>
              <p className="my-2 text-lg">üåÄ {t('features.amount')}</p>
              <p className="my-2 text-lg">üéÜ {t('features.description')}</p>
            </div>
            <div className="mt-6 flex flex-col items-center space-y-2">
              <a className="link" onClick={scrollToDemo}>
                Results
              </a>
              <a className="link" onClick={scrollToSteps}>
                How It Works
              </a>
            </div>

            <div className="absolute bottom-6">
              <Socials label={t('seen-on')} />
            </div>
          </div>
        </div>
        <section ref={demoRef} className="mx-auto px-3 pb-24 pt-12 text-center">
          <div className="px-6 pt-6 pb-12">
            <h2 className="uppercase tracking-widest">
              15 unique images in 5 different anime styles
            </h2>
            <div className="flex justify-center space-x-6">
              <div className="text-sm">üíï Kawaii</div>
              <div className="text-sm">ü§ñ Mecha</div>
              <div className="text-sm">üí• Shonen</div>
              <div className="text-sm">üåÄ Naruto</div>
            </div>
          </div>
          <Demo />
        </section>

        <hr className="w-full border-slate-500" />

        <section ref={stepsRef} className="mx-auto px-3 pb-24 pt-12 text-center">
          <div className="px-6 pt-6 pb-12">
            <h2 className="text-center uppercase tracking-widest">
              Get your images in 3 simple steps
            </h2>
          </div>
          <Steps />
        </section>

        <hr className="w-full border-slate-500" />
        {/* <section className="w-[60%] mx-auto text-center p-12">
          <h2 className="text-3xl font-bold mb-6">‚ùì Frequently Asked Questions</h2>
          <div>
            <h3 className="text-2xl font-semibold mb-4">What type of photos should I upload?</h3>
            <p>
              We recommend 10 close ups of your face, 3 photos of your side profile, 5 photos from
              your chest and up and 3 full body photos. The more different your photos are from each
              other the better! Make sure there's no other people or animals in your photos than the
              main subject (you, or your dog, or cat, or your bf/gf if you selected couple). Photos
              with a variety of facial expressions, locations, backgrouns and perspecitves are
              better. Don't just look into the camera, also look away! High quality photos work
              better. If you like to wear makeup, make sure it's minimal in your photos, or it may
              be exaggerated in the avatars. Please don't upload nudes. Swimwear and underwear is
              fine
            </p>
          </div>
          <h3 className="text-2xl font-semibold mb-4">
            What file formats of photos do you accept?
          </h3>
          <p>
            Right now we support JPG, PNG, WebP, HEIC, JFIF, TIFF and RAW. We don't support AVIF or
            GIF!
          </p>
          <h3 className="text-2xl font-semibold mb-4">
            How long will it take to receive my avatars?
          </h3>
          <p>
            Right now it'll take about 37 minutes (based on current processing times) to generate
            your avatars.
          </p>
          <h3 className="text-2xl font-semibold mb-4">What will you do with my photos?</h3>
          <p>
            Great question. We only use them to train the AI model, render your avatars and then
            delete both the input photos and the AI model from our servers and the GPU API's servers
            (where it's processed) within 24 hours. Beware of other apps that generate profile
            photos and avatars as most store your data forever to mine it which means they can
            generate any image (like deepfakes) with your face in it forever. Some are even
            affiliated with foreign governments with might get your data!
          </p>
        </section> */}
        <div className="fixed bottom-0 z-50 w-full border-t border-slate-500 bg-brand p-6 text-center">
          <button onClick={handlePurchase} className="cta glow btn-primary btn w-80">
            {t('cta-start')} - 9.99‚Ç¨
          </button>
        </div>
      </main>
    </>
  );
}

export const getStaticProps: GetStaticProps = async ({ locale = 'en' }) => {
  return {
    props: {
      ...(await serverSideTranslations(locale, ['home'])),
    },
  };
};
